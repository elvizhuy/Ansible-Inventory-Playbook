---
- name: Install & Secure Mysql
  hosts: database_slave
  become: yes
  gather_facts: true
#  module_defaults:
#      mysql:
#        login_unix_socket: /var/run/mysqld/mysqld.sock
  vars_files:
      - vars.yml

  tasks:
    - name: Update apt cache
      apt:
         update_cache: yes

    - name: install new MYSQL database
      package:
         name: "{{item}}"
         state: present
         update_cache: yes
      loop:
         - mysql-server
         - mysql-client
         - python3-mysqldb
         - libmysqlclient-dev
      become: yes

#    - name: start MYSQL service
#      systemd:
#          name: mysql
#          state: started
#          enable: yes
#      action: service name=mysql state=started

    - name: Set root user password
      become: yes
      mysql_user:
        name: root
        password: "{{mysql_root_password}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        host: localhost
        login_user: root
        login_password: ''
        state: present

    - name: create DB user
      mysql_user:
          name: "{{ mysql_user }}"
          password: "{{ mysql_password }}"
          priv: '*.*:ALL,GRANT'
          host: '%'
          append_privs: yes
          login_user: root
          login_password: "{{mysql_root_password}}"
          state: present

    - name: Remove the test database
      mysql_db: name=test state=absent

    - name: create database
      mysql_db:
          name: "{{ mysql_db_name }}"
          login_user: root
          login_password: "{{mysql_root_password}}"
          state: present

    - name: Enable remote login to mysql
      lineinfile:
          path: /etc/mysql/mysql.conf.d/mysqld.cnf
          regex: '^bind-address\s*=\s*127.0.0.1'
          line: 'bind-address = 0.0.0.0'
          backup: yes
      notify:
          - Restart mysql

    - name: Execute MySQL secure installation
      expect:
        command: mysql_secure_installation
        responses:
          'Enter password for user root:': "{{ root_password }}"
          'Press y\|Y for Yes, any other key for No': 'Y'
          'Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG': "{{ password_validation_policy }}"
          'Change the password for root \? \(\(Press y\|Y for Yes, any other key for No\)': 'n'
          'Remove anonymous users\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
          'Disallow root login remotely\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
          'Remove test database and access to it\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
          'Reload privilege tables now\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
      environment:
        MYSQL_PWD: "{{ mysql_root_password }}"

    - name: Ensure anonymous users are not in the database
      mysql_user: user='' host=$item state=absent
      with_items:
          - 127.0.0.1
          - ::1
          - localhost

    - name: Copy .my.cnf file with root password credentials
      template: src=templates/.my.cnf dest=/etc/mysql/my.cnf owner=root mode=0600

    - name: Update mysql root password for all root accounts
      mysql_user: name=root host={{item}} password={{mysql_root_password}}
      loop:
          - 127.0.0.1
          - ::1
          - localhost

#================================================ MIGRATE ====================================================
    - name: Ensure the database exists
      mysql_db:
        name: "{{ mysql_db_name }}"
        state: present
      register: database_check

    - name: Run Database Migration Script
      shell: /var/lib/jenkins/workspace/ Ansible-Inventory-Playbook/migration_script.sh
      args:
        executable: /bin/bash
      when: database_check.changed

  handlers:
    - name: Restart mysql
      service:
          name: mysql
          state: restarted
